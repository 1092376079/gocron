// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtask.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	"strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunTaskRequest struct {
	Command              string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Timeout              int32    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTaskRequest) Reset()         { *m = RunTaskRequest{} }
func (m *RunTaskRequest) String() string { return proto.CompactTextString(m) }
func (*RunTaskRequest) ProtoMessage()    {}
func (*RunTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adea3828efc318fc, []int{0}
}

func (m *RunTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTaskRequest.Unmarshal(m, b)
}
func (m *RunTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTaskRequest.Marshal(b, m, deterministic)
}
func (m *RunTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTaskRequest.Merge(m, src)
}
func (m *RunTaskRequest) XXX_Size() int {
	return xxx_messageInfo_RunTaskRequest.Size(m)
}
func (m *RunTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunTaskRequest proto.InternalMessageInfo

func (m *RunTaskRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *RunTaskRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RunTaskRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RunTaskResp struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTaskResp) Reset()         { *m = RunTaskResp{} }
func (m *RunTaskResp) String() string { return proto.CompactTextString(m) }
func (*RunTaskResp) ProtoMessage()    {}
func (*RunTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_adea3828efc318fc, []int{1}
}

func (m *RunTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTaskResp.Unmarshal(m, b)
}
func (m *RunTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTaskResp.Marshal(b, m, deterministic)
}
func (m *RunTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTaskResp.Merge(m, src)
}
func (m *RunTaskResp) XXX_Size() int {
	return xxx_messageInfo_RunTaskResp.Size(m)
}
func (m *RunTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_RunTaskResp proto.InternalMessageInfo

func (m *RunTaskResp) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *RunTaskResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*RunTaskRequest)(nil), "rpc.RunTaskRequest")
	proto.RegisterType((*RunTaskResp)(nil), "rpc.RunTaskResp")
}

func init() { proto.RegisterFile("runtask.proto", fileDescriptor_adea3828efc318fc) }

var fileDescriptor_adea3828efc318fc = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xcd, 0xae, 0x82, 0x30,
	0x10, 0x85, 0x6f, 0xf9, 0xcd, 0x1d, 0x23, 0x31, 0xd5, 0x98, 0xc6, 0x15, 0x61, 0xc5, 0x8a, 0x05,
	0xee, 0xf4, 0x2d, 0x1a, 0x5e, 0x00, 0xa1, 0x0b, 0x42, 0x68, 0x6b, 0x3b, 0xf3, 0xfe, 0x06, 0x04,
	0x13, 0x96, 0xdf, 0x4c, 0xe6, 0x9b, 0x73, 0xe0, 0xe8, 0x48, 0x63, 0xeb, 0xc7, 0xca, 0x3a, 0x83,
	0x86, 0x87, 0xce, 0x76, 0x45, 0x03, 0x99, 0x24, 0xdd, 0xb4, 0x7e, 0x94, 0xea, 0x4d, 0xca, 0x23,
	0x17, 0x90, 0x76, 0x66, 0x9a, 0x5a, 0xdd, 0x8b, 0x20, 0x67, 0xe5, 0xbf, 0xdc, 0x70, 0xde, 0xe0,
	0x30, 0x29, 0x43, 0x28, 0xc2, 0x9c, 0x95, 0xb1, 0xdc, 0x90, 0x67, 0x10, 0x0c, 0xbd, 0x88, 0x72,
	0x56, 0x86, 0x32, 0x18, 0xfa, 0xe2, 0x09, 0x87, 0x9f, 0xd5, 0x5b, 0x7e, 0x85, 0xc4, 0x10, 0x5a,
	0x42, 0xc1, 0x16, 0xe3, 0x4a, 0xfc, 0x02, 0xb1, 0x72, 0xce, 0xb8, 0xf5, 0xd1, 0x17, 0xea, 0x07,
	0x44, 0xf3, 0x25, 0xaf, 0x21, 0x5d, 0x0c, 0xa4, 0xf9, 0xb9, 0x72, 0xb6, 0xab, 0xf6, 0x41, 0x6f,
	0xa7, 0xfd, 0xd0, 0xdb, 0xe2, 0xef, 0x95, 0x2c, 0xd5, 0xee, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x16, 0x99, 0x8e, 0xed, 0xeb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	TaskRun(alias string, ctx context.Context, in *RunTaskRequest, opts ...grpc.CallOption) (*RunTaskResp, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) TaskRun(alias string, ctx context.Context, in *RunTaskRequest, opts ...grpc.CallOption) (*RunTaskResp, error) {
	out := new(RunTaskResp)
	method := fmt.Sprintf("/%s.%s/TaskRun", strings.ToLower(alias), strings.Title(alias))
	err := c.cc.Invoke(ctx, method, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	TaskRun(context.Context, *RunTaskRequest) (*RunTaskResp, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) TaskRun(ctx context.Context, req *RunTaskRequest) (*RunTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskRun not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_TaskRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).TaskRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Task/TaskRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).TaskRun(ctx, req.(*RunTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TaskRun",
			Handler:    _Task_TaskRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtask.proto",
}
